<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_budeie</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>108</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_friction</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0.9</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up nvars

self.pressed_left = false
self.pressed_right = false
self.pressed_up = false
self.pressed_down = false
self.pressed_sprint = false
self.pressed_sing = false

mp_sync();

mp_addPosition("Pos", 1*room_speed);
mp_setType("Pos",mp_type.SMART);
mp_tolerance("Pos",2);

mp_addBuiltinPhysics("basicPhysics",15*room_speed);
mp_setType("basicPhysics",mp_type.SMART);


mp_add("moo", "pressed_sing", buffer_bool, 1);
mp_setType("moo", mp_type.SMART);

mp_add("controls","pressed_left,pressed_right,pressed_up,pressed_down,pressed_sprint",buffer_bool,1);
mp_setType("controls",mp_type.FAST);

maxSpeed = 10;
singCooldown = 10;

if(htme_isServer() &amp;&amp; !htme_isLocal() || !htme_isServer() &amp;&amp; htme_isLocal()){
    sprite_index = spr_ku;
        x = 3712;
    y = 1952;
}
else{
    x = 224;
    y = 256;
}

gamepad_set_axis_deadzone(0, 0.4)

if(htme_isServer() &amp;&amp; !htme_isLocal()){
    audio_play_sound(bell0, 0, true)
    audio_sound_gain(bell0, 0,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.pressed_up = mp_map_syncOut("pressed_up",self.pressed_up);
self.pressed_down = mp_map_syncOut("pressed_down",self.pressed_down);
self.pressed_left = mp_map_syncOut("pressed_left",self.pressed_left);
self.pressed_right = mp_map_syncOut("pressed_right",self.pressed_right);
self.pressed_sprint = mp_map_syncOut("pressed_sprint",self.pressed_sprint);
self.pressed_sing = mp_map_syncOut("pressed_sing",self.pressed_sing);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(htme_isLocal()){
    self.pressed_left = keyboard_check(vk_left) || (gamepad_axis_value(0,gp_axislh) &lt; 0);
    self.pressed_right = keyboard_check(vk_right) || (gamepad_axis_value(0,gp_axislh) &gt; 0);
    self.pressed_up = keyboard_check(vk_up) || (gamepad_axis_value(0,gp_axislv) &lt; 0);
    self.pressed_down = keyboard_check(vk_down) || (gamepad_axis_value(0,gp_axislv) &gt; 0);
    self.pressed_sprint = keyboard_check(vk_rshift) || gamepad_button_check(0, gp_face3);
    self.pressed_sing = keyboard_check(vk_rcontrol) || gamepad_button_check(0, gp_face1);
}

mp_map_syncIn("pressed_up",self.pressed_up);
mp_map_syncIn("pressed_down",self.pressed_down);
mp_map_syncIn("pressed_left",self.pressed_left);
mp_map_syncIn("pressed_right",self.pressed_right);
mp_map_syncIn("pressed_sprint",self.pressed_sprint);
mp_map_syncIn("pressed_sing",self.pressed_sing);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = speed/20;
depth = -y; 



maxSpeed = 10;

boost =  1;

if (self.pressed_sprint) {
    boost = 2;
    maxSpeed = 15;
}

left = self.pressed_left
up = self.pressed_up
down = self.pressed_down
if(up){
    vspeed -= 2*boost;
}
right = self.pressed_right
sing = self.pressed_sing

if(down)
{
    vspeed += 2*boost;
}
if(left){
    hspeed -= 2*boost;
}
if(right)
{
    hspeed += 2*boost;
}

if(abs(vspeed) &gt; maxSpeed){
    vspeed = sign(vspeed) * maxSpeed;
}

if(abs(hspeed) &gt; maxSpeed){
    hspeed = sign(hspeed) * maxSpeed;
}

if(abs(sign(hspeed))&gt;0) {
    image_xscale = sign(hspeed);
}

if(sing &amp;&amp; alarm[0] == -1){
    audio_play_sound(choose(jodle0,jodle1,jodle2,jodle3,jodle4,jodle5), 0 , false);
    audio_play_sound(choose(moo0,moo1, moo2), 0 , false);
    alarm = 30*singCooldown;
}

if(htme_isServer() &amp;&amp; !htme_isLocal()){
    audio_sound_gain(bell0,speed/maxSpeed,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>101</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>000010000</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Bush">
      <action>
        <libid>1</libid>
        <id>101</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>000010000</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Tree">
      <action>
        <libid>1</libid>
        <id>101</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>000010000</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Fence">
      <action>
        <libid>1</libid>
        <id>101</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>000010000</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Rock">
      <action>
        <libid>1</libid>
        <id>101</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>000010000</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Budeie">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_message("チェエスゲット！ Cheese Get! You Win!");
game_end()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>45,70</point>
    <point>70,70</point>
  </PhysicsShapePoints>
</object>
